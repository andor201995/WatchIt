buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:${Version.gradle_build}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${Version.kotlin}"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:${Version.navigation_component}"
    }
}

plugins {
    id "com.github.ben-manes.versions" version "0.27.0"
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url 'https://oss.jfrog.org/artifactory/oss-snapshot-local' }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

dependencyUpdates {
    checkForGradleUpdate = true

    // Example 1: reject all non stable versions
    rejectVersionIf {
        isNonStable(candidate.version)
    }

    // Example 2: disallow release candidates as upgradable versions from stable versions
    rejectVersionIf {
        isNonStable(candidate.version) && !isNonStable(currentVersion)
    }

    // Example 3: using the full syntax
    resolutionStrategy {
        componentSelection {
            all {
                if (isNonStable(candidate.version) && !isNonStable(currentVersion)) {
                    reject('Release candidate')
                }
            }
        }
    }
}